### INVENTORY ##

info.app.version='@project.version@'

# generates table for domain data 
spring.jpa.generate-ddl=true
spring.jpa.open-in-view=false

spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}

eventuatelocal.kafka.bootstrap.servers=${EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS}
eventuatelocal.zookeeper.connection.string=${EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING}

## size as integer
t2.inventory.size=${T2_INVENTORY_SIZE}
t2.inventory.TTL=${T2_INVENTORY_TTL}
t2.inventory.taskRate=${T2_INVENTORY_TASKRATE}

## set to 'nosaga' to run application without additional things.
## set to 'saga' to run application with cdc and jpa and everything.
spring.profiles.active=${SPRING_PROFILES_ACTIVE}

opentracing.jaeger.service-name=inventory
opentracing.jaeger.enabled=${T2_JAEGER_ENABLED}
opentracing.jaeger.udp-sender.host=${T2_JAEGER_HOST}

management.endpoints.web.exposure.include=prometheus, health

management.metrics.tags.application=inventory
management.metrics.distribution.percentiles.all=0.5, 0.75, 0.95, 0.98, 0.99, 0.999, 1.0

management.endpoint.health.probes.enabled=true
management.endpoint.health.show-details=always
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

eventuate.outbox.id=2
